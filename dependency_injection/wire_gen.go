// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package dependency_injection

import (
	"github.com/google/wire"
	"github.com/zein-adi/go-keep-new-backend/app/middlewares"
	"github.com/zein-adi/go-keep-new-backend/domains/auth/core/auth_repo_interfaces"
	"github.com/zein-adi/go-keep-new-backend/domains/auth/core/auth_service_interfaces"
	"github.com/zein-adi/go-keep-new-backend/domains/auth/core/auth_services"
	"github.com/zein-adi/go-keep-new-backend/domains/auth/handlers/auth_handlers_local"
	"github.com/zein-adi/go-keep-new-backend/domains/auth/handlers/auth_handlers_local/auth_handlers_local_interfaces"
	"github.com/zein-adi/go-keep-new-backend/domains/auth/handlers/auth_handlers_restful"
	"github.com/zein-adi/go-keep-new-backend/domains/auth/handlers/auth_handlers_restful/auth_handlers_restful_interfaces"
	"github.com/zein-adi/go-keep-new-backend/domains/auth/repos/auth_repos_memory"
	"github.com/zein-adi/go-keep-new-backend/domains/auth/repos/auth_repos_mysql"
	"github.com/zein-adi/go-keep-new-backend/domains/auth/repos/auth_repos_redis"
	"github.com/zein-adi/go-keep-new-backend/domains/keep/core/keep_repo_interfaces"
	"github.com/zein-adi/go-keep-new-backend/domains/keep/core/keep_service_interfaces"
	"github.com/zein-adi/go-keep-new-backend/domains/keep/core/keep_services"
	"github.com/zein-adi/go-keep-new-backend/domains/keep/handlers/keep_handlers_restful"
	"github.com/zein-adi/go-keep-new-backend/domains/keep/handlers/keep_handlers_restful/keep_handlers_restful_interfaces"
	"github.com/zein-adi/go-keep-new-backend/domains/keep/repos/keep_repos_mysql"
)

// Injectors from auth.go:

// User
func InitUserUserMysqlRepository() *auth_repos_mysql.UserMysqlRepository {
	userMysqlRepository := auth_repos_mysql.NewUserMysqlRepository()
	return userMysqlRepository
}

func InitUserUserRestful() *auth_handlers_restful.UserRestfulHandler {
	userMysqlRepository := auth_repos_mysql.NewUserMysqlRepository()
	roleMysqlRepository := auth_repos_mysql.NewRoleMysqlRepository()
	userServices := auth_services.NewUserServices(userMysqlRepository, roleMysqlRepository)
	userRestfulHandler := auth_handlers_restful.NewUserRestfulHandler(userServices)
	return userRestfulHandler
}

// Role
func InitUserRoleRestful() *auth_handlers_restful.RoleRestfulHandler {
	roleMysqlRepository := auth_repos_mysql.NewRoleMysqlRepository()
	roleServices := auth_services.NewRoleServices(roleMysqlRepository)
	roleRestfulHandler := auth_handlers_restful.NewRoleRestfulHandler(roleServices)
	return roleRestfulHandler
}

func InitUserRoleMysqlRepository() *auth_repos_mysql.RoleMysqlRepository {
	roleMysqlRepository := auth_repos_mysql.NewRoleMysqlRepository()
	return roleMysqlRepository
}

// Permission
func InitUserPermissionMemoryRepository() *auth_repos_memory.PermissionMemoryRepository {
	permissionMemoryRepository := auth_repos_memory.NewPermissionMemoryRepository()
	return permissionMemoryRepository
}

func InitUserPermissionRestful() *auth_handlers_restful.PermissionRestfulHandler {
	permissionMemoryRepository := auth_repos_memory.NewPermissionMemoryRepository()
	roleMysqlRepository := auth_repos_mysql.NewRoleMysqlRepository()
	permissionServices := auth_services.NewPermissionServices(permissionMemoryRepository, roleMysqlRepository)
	permissionRestfulHandler := auth_handlers_restful.NewPermissionRestfulHandler(permissionServices)
	return permissionRestfulHandler
}

// Auth
func InitUserAuthRestful() *auth_handlers_restful.AuthRestfulHandler {
	authMysqlRepository := auth_repos_redis.NewAuthRedisRepository()
	userMysqlRepository := auth_repos_mysql.NewUserMysqlRepository()
	roleMysqlRepository := auth_repos_mysql.NewRoleMysqlRepository()
	authServices := auth_services.NewAuthServices(authMysqlRepository, userMysqlRepository, roleMysqlRepository)
	authRestfulHandler := auth_handlers_restful.NewAuthRestfulHandler(authServices)
	return authRestfulHandler
}

func InitAclMiddleware() *middlewares.MiddlewareAcl {
	roleMysqlRepository := auth_repos_mysql.NewRoleMysqlRepository()
	roleServices := auth_services.NewRoleServices(roleMysqlRepository)
	roleLocalHandler := auth_handlers_local.NewRoleLocalHandler(roleServices)
	middlewareAcl := middlewares.NewMiddlewareAcl(roleLocalHandler)
	return middlewareAcl
}

// Injectors from keep.go:

func InitKeepPosRestful() *keep_handlers_restful.PosRestfulHandler {
	posMysqlRepository := keep_repos_mysql.NewPosMySqlRepository()
	posServices := keep_services.NewPosServices(posMysqlRepository)
	posRestfulHandler := keep_handlers_restful.NewPosRestfulHandler(posServices)
	return posRestfulHandler
}

// auth.go:

var (
	UserRoleSet       = wire.NewSet(auth_repos_mysql.NewRoleMysqlRepository, wire.Bind(new(auth_repo_interfaces.IRoleRepository), new(*auth_repos_mysql.RoleMysqlRepository)), auth_services.NewRoleServices, wire.Bind(new(auth_service_interfaces.IRoleServices), new(*auth_services.RoleServices)), auth_handlers_restful.NewRoleRestfulHandler, wire.Bind(new(auth_handlers_restful_interfaces.IRoleRestfulHandler), new(*auth_handlers_restful.RoleRestfulHandler)), auth_handlers_local.NewRoleLocalHandler, wire.Bind(new(auth_handlers_local_interfaces.IRoleLocalHandler), new(*auth_handlers_local.RoleLocalHandler)), middlewares.NewMiddlewareAcl)
	UserPermissionSet = wire.NewSet(auth_repos_memory.NewPermissionMemoryRepository, wire.Bind(new(auth_repo_interfaces.IPermissionRepository), new(*auth_repos_memory.PermissionMemoryRepository)), auth_services.NewPermissionServices, wire.Bind(new(auth_service_interfaces.IPermissionServices), new(*auth_services.PermissionServices)), auth_handlers_restful.NewPermissionRestfulHandler, wire.Bind(new(auth_handlers_restful_interfaces.IPermissionRestfulHandler), new(*auth_handlers_restful.PermissionRestfulHandler)))
	UserAuthSet       = wire.NewSet(auth_repos_redis.NewAuthRedisRepository, wire.Bind(new(auth_repo_interfaces.IAuthRepository), new(*auth_repos_redis.AuthMysqlRepository)), auth_services.NewAuthServices, wire.Bind(new(auth_service_interfaces.IAuthServices), new(*auth_services.AuthServices)), auth_handlers_restful.NewAuthRestfulHandler, wire.Bind(new(auth_handlers_restful_interfaces.IAuthRestfulHandler), new(*auth_handlers_restful.AuthRestfulHandler)))
	UserUserSet       = wire.NewSet(auth_repos_mysql.NewUserMysqlRepository, wire.Bind(new(auth_repo_interfaces.IUserRepository), new(*auth_repos_mysql.UserMysqlRepository)), auth_services.NewUserServices, wire.Bind(new(auth_service_interfaces.IUserServices), new(*auth_services.UserServices)), auth_handlers_restful.NewUserRestfulHandler, wire.Bind(new(auth_handlers_restful_interfaces.IUserRestfulHandler), new(*auth_handlers_restful.UserRestfulHandler)))
)

// keep.go:

var (
	KeepPosSet = wire.NewSet(keep_repos_mysql.NewPosMySqlRepository, wire.Bind(new(keep_repo_interfaces.IPosRepository), new(*keep_repos_mysql.PosMysqlRepository)), keep_services.NewPosServices, wire.Bind(new(keep_service_interfaces.IPosServices), new(*keep_services.PosServices)), keep_handlers_restful.NewPosRestfulHandler, wire.Bind(new(keep_handlers_restful_interfaces.IPosRestfulHandler), new(*keep_handlers_restful.PosRestfulHandler)))
)
